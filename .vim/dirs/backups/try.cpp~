#include <stdio.h>
#include <omp.h>
static long num_steps = 100000;
double step;
#define NUM_THREADS 2

int main(){
    int i;
    double pi=0.0;
    double sum=0.0;
    double x=0.0;
    step=1.0/(double)num_steps;
    omp_set_num_threads(NUM_THREADS);

#pragma omp parallel
    {
        double x,sum;
        int id;
        id=omp_get_thread_num();
        for (i=id,sum=0.0;i<num_steps;i+=NUM_THREADS){
            x=(i+0.5)*step;
            sum+=4.0/(1.0+x*x);
        }
#pragma omp critical
        {
            printf("id=%d, sum*step=%lf\n",id,sum*step);    
            pi+=sum*step;
        }
    }
    printf("%lf\n",pi);
    return 0;
}
