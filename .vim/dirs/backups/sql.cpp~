#include "sql.h"

MYSQL *conn;
MYSQL_RES *res;
MYSQL_ROW row;
char server[]="localhost";
char user[]="root";
char passwd[]="hijklmn";
char database[]="travel";

void sql_execute(string cmd){
    if (mysql_query(conn,cmd.c_str())){
        cout<<"Failed when executing: "+cmd<<endl;
        exit(1);
    }
}

string sql_select(string cmd){
    //cout<<"query to exec: "<<cmd<<endl;
    //if (mysql_query(conn,cmd.c_str())){
    if (mysql_real_query(conn,cmd.c_str(),cmd.length())){
        cout<<"Failed when selecting: "+cmd<<endl;
        exit(1);
    }
    else{
        string ans="";
        stringstream stream;
        res=mysql_store_result(conn);
        if (!res){
            cout<<"answer if empty"<<endl;
            return NULL;
        }
        else{
            while (row=mysql_fetch_row(res)){
                for (int i=0;i<mysql_num_fields(res);i++){
                    stream<<row[i]<<',';
                }
                stream<<endl;
            }
        }
        string tmp;
        while (getline(stream,tmp)){
            ans=ans+tmp+"\n";
        }
        return ans;       
    }
}

void sql_connect(){
    conn=mysql_init(NULL);
    if (!mysql_real_connect(conn,server,user,passwd,database,0,NULL,0)){
        cout<<"connect failed"<<endl;
        exit(1);
    }
    cout<<"connect succeed."<<endl;
}
void sql_drop(){
    string drop_cmd="drop table if exists ";
    string tables[]={"FLIGHTS","HOTELS","CARS","CUSTOMERS","RESERVATIONS"};
    for (int i=0;i<5;i++){
        string cmd=drop_cmd+tables[i];
        sql_execute(cmd);
    }
    cout<<"drop succeed."<<endl;
}

void sql_create(){
    string create_cmd[]={
        "create table FLIGHTS(flightNum char(20),price int,numSeats int,numAvail int,FromCity char(20),ArivCity char(20),primary key(flightNum));",
        "create table HOTELS(location char(20),price int,numRooms int,numAvail int,primary key (location));",
        "create table CARS(location char(20),price int,numCars int,numAvail int,primary key(location));",
        "create table CUSTOMERS(custName char(20),primary key(custName));",
        "create table RESERVATIONS(custName char(20),resvType int,typekey char(20),resvKey char(20),primary key (resvKey));"
    };
    for (int i=0;i<5;i++){
        string cmd=create_cmd[i];
        sql_execute(cmd);
    }
    cout<<"create succeed."<<endl;
}

void sql_insert(){
    string insert_cmd[]={
        "insert into FLIGHTS values('F0',1000,100,100,'Hangzhou','Hefei');",
        "insert into FLIGHTS values('F1',1100,90,90,'Hefei','Jiangshan');",
        "insert into FLIGHTS values('F2',100000,3,3,'Jiangshan','New York');",
        "insert into HOTELS values('Hangzhou',900,100,100);",
        "insert into HOTELS values('Hefei',100,3,3);",
        "insert into HOTELS values('Jiangshan',200,75,75);",
        "insert into HOTELS values('New York',999,999,999);",
        "insert into CARS values('Hangzhou',90,1000,1000);",
        "insert into CARS values('Hefei',10,30,30);",
        "insert into CARS values('Jiangshan',20,750,750);",
        "insert into CARS values('New York',99,9999,9999);"
    };
    for (int i=0;i<10;i++){
        string cmd=insert_cmd[i];
        cout<<cmd<<endl;
        sql_execute(cmd);
    }
    
    //============insert customers========
    ifstream name_file("sql/name.txt");
    if (!name_file.is_open()){
        cout<<"Error opening file"<<endl;
        exit(1);
    }
    string name;
    while (getline(name_file,name)){
        name.erase(name.length()-1);
        string cmd="insert into CUSTOMERS values('"+name+"');";
        sql_execute(cmd);
    }
    cout<<"insert succeed."<<endl;
}

void sql_close(){
    mysql_close(conn);
}

