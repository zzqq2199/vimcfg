#include "dsp.h"
interface mainMemu;
interface adminFuncList;

int getinput(int from, int to){
    cout<<"Enter your choose ("<<from<<"~"<<to<<"):"<<endl;
    while (1){
        int c;
        cin>>c;
        if (c>=from && c<=to)
            return c;
        cout<<"Enter again:"<<endl;
    }
}

int dsp(interface itf){
    while(1){
        cout<<endl<<endl<<endl<<endl<<endl;
        cout<<"====="<<itf.title<<"====="<<endl;
        options* pop=&itf.ops;
        int cnt=0;
        int (*funcs[10])();
        do
        {
            cout<<'['<<++cnt<<']';
            funcs[cnt]=pop->p;
            cout<<pop->op_name<<endl;
            pop=pop->next;       
        }while (pop);
        cout<<"[0]Exit"<<endl;
        int chosen=getinput(0,cnt);
        cout<<"you choose "<<chosen<<endl;
        if (chosen==0)
            return 0;
        else{
            funcs[chosen]();
        }
    }
}
int confirmPasswd(){
    cout<<"Please enter password:"<<endl;
    string passwd;
    cin>>passwd;
    if (passwd=="hijklmn"){
        dsp(adminFuncList);     
    }
    else
        return 0;
}
int initializeDsp(){
    mainMemu.title="main memu";
    options* pop=&mainMemu.ops;
    pop->op_name="administrator";
    pop->p=confirmPasswd;
    pop->next=(options*)malloc(sizeof(options));
    pop=pop->next;
    pop->op_name="customers";

    adminFuncList.title="function list";
    pop=&adminFuncList.ops;
    pop->op_name="inspect";
    
    dsp(mainMemu);
       
}


